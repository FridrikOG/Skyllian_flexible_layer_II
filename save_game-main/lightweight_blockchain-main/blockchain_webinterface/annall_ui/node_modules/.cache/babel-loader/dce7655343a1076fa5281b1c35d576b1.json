{"ast":null,"code":"const getBoss = (bosses, bossId) => {\n  let ourBoss = {};\n  let ret = bosses.filter(el => el.id.toString() === bossId);\n  let first = ret[0];\n  return first;\n};\n\nconst bubbleReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    bosses: []\n  };\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"SET_BUBBLES\":\n      return {\n        bosses: action.payload\n      };\n\n    case \"DELETE_BUBBLES\":\n      return {\n        bosses: state.bosses.filter(el => el.id.toString() !== action.payload.id)\n      };\n\n    case \"ADD_BUBBLES\":\n      return {\n        bosses: [...state.bosses, action.payload]\n      };\n\n    case \"EDIT_BUBBLES\":\n      const filteredBosses = state.bosses.filter(el => el.id.toString() !== action.payload.id);\n      return {\n        bosses: [...filteredBosses, action.payload]\n      };\n\n    case \"GET_SINGLE_BUBBLE\":\n      return {\n        bosses: action.payload\n      };\n\n    default:\n      return {\n        bosses: state.bosses\n      };\n  }\n};\n\nexport default bubbleReducer;","map":{"version":3,"sources":["/Users/heidifjeldelima/Documents/GitHub/save_game/lightweight_blockchain-main/blockchain_webinterface/annall_ui/src/redux/reducers/bubbleReducer.js"],"names":["getBoss","bosses","bossId","ourBoss","ret","filter","el","id","toString","first","bubbleReducer","state","action","type","payload","filteredBosses"],"mappings":"AAAA,MAAMA,OAAO,GAAG,CAACC,MAAD,EAASC,MAAT,KAAoB;AAClC,MAAIC,OAAO,GAAG,EAAd;AACA,MAAIC,GAAG,GAAGH,MAAM,CAACI,MAAP,CAAeC,EAAD,IAAQA,EAAE,CAACC,EAAH,CAAMC,QAAN,OAAqBN,MAA3C,CAAV;AACA,MAAIO,KAAK,GAAGL,GAAG,CAAC,CAAD,CAAf;AACA,SAAOK,KAAP;AACD,CALD;;AAOA,MAAMC,aAAa,GAAG,YAAoC;AAAA,MAAnCC,KAAmC,uEAA3B;AAAEV,IAAAA,MAAM,EAAE;AAAV,GAA2B;AAAA,MAAXW,MAAW;;AACxD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,aAAL;AACE,aAAO;AACLZ,QAAAA,MAAM,EAAEW,MAAM,CAACE;AADV,OAAP;;AAGF,SAAK,gBAAL;AACE,aAAO;AACLb,QAAAA,MAAM,EAAEU,KAAK,CAACV,MAAN,CAAaI,MAAb,CACLC,EAAD,IAAQA,EAAE,CAACC,EAAH,CAAMC,QAAN,OAAqBI,MAAM,CAACE,OAAP,CAAeP,EADtC;AADH,OAAP;;AAKF,SAAK,aAAL;AACE,aAAO;AACLN,QAAAA,MAAM,EAAE,CAAC,GAAGU,KAAK,CAACV,MAAV,EAAkBW,MAAM,CAACE,OAAzB;AADH,OAAP;;AAIF,SAAK,cAAL;AACE,YAAMC,cAAc,GAAGJ,KAAK,CAACV,MAAN,CAAaI,MAAb,CACpBC,EAAD,IAAQA,EAAE,CAACC,EAAH,CAAMC,QAAN,OAAqBI,MAAM,CAACE,OAAP,CAAeP,EADvB,CAAvB;AAGA,aAAO;AACLN,QAAAA,MAAM,EAAE,CAAC,GAAGc,cAAJ,EAAoBH,MAAM,CAACE,OAA3B;AADH,OAAP;;AAIF,SAAK,mBAAL;AACE,aAAO;AACLb,QAAAA,MAAM,EAAEW,MAAM,CAACE;AADV,OAAP;;AAGF;AACE,aAAO;AACLb,QAAAA,MAAM,EAAEU,KAAK,CAACV;AADT,OAAP;AA7BJ;AAiCD,CAlCD;;AAoCA,eAAeS,aAAf","sourcesContent":["const getBoss = (bosses, bossId) => {\n  let ourBoss = {};\n  let ret = bosses.filter((el) => el.id.toString() === bossId);\n  let first = ret[0];\n  return first;\n};\n\nconst bubbleReducer = (state = { bosses: [] }, action) => {\n  switch (action.type) {\n    case \"SET_BUBBLES\":\n      return {\n        bosses: action.payload,\n      };\n    case \"DELETE_BUBBLES\":\n      return {\n        bosses: state.bosses.filter(\n          (el) => el.id.toString() !== action.payload.id\n        ),\n      };\n    case \"ADD_BUBBLES\":\n      return {\n        bosses: [...state.bosses, action.payload],\n      };\n\n    case \"EDIT_BUBBLES\":\n      const filteredBosses = state.bosses.filter(\n        (el) => el.id.toString() !== action.payload.id\n      );\n      return {\n        bosses: [...filteredBosses, action.payload],\n      };\n\n    case \"GET_SINGLE_BUBBLE\":\n      return {\n        bosses: action.payload,\n      };\n    default:\n      return {\n        bosses: state.bosses,\n      };\n  }\n};\n\nexport default bubbleReducer;\n"]},"metadata":{},"sourceType":"module"}