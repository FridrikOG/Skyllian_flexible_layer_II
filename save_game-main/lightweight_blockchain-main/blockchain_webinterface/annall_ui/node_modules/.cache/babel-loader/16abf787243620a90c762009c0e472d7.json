{"ast":null,"code":"var _jsxFileName = \"/Users/fridrikorngunnarsson/Documents/GitHub/save_game/save_game/lightweight_blockchain-main/blockchain_webinterface/annall_ui/src/components/NodeSystem/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NodeSystem = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const navigate = useNavigate;\n  const [title, settitle] = useState(\"\");\n  const [description, setdescription] = useState(\"\");\n  const [url, setUrl] = useState(\"\");\n  const [answer1, setAnswer1] = useState(\"\");\n  const [answer2, setAnswer2] = useState(\"\");\n  const [answer3, setAnswer3] = useState(\"\");\n  const [answer4, setAnswer4] = useState(\"\");\n  const [answer1Correct, setAnswer1Correct] = useState(false);\n  const [answer2Correct, setAnswer2Correct] = useState(false);\n  const [answer3Correct, setAnswer3Correct] = useState(false);\n  const [answer4Correct, setAnswer4Correct] = useState(false);\n  const [errors, setErrors] = useState({\n    title: \"\",\n    description: \"\",\n    url: \"\"\n  });\n  const [correctAnswer, setCorrectAnswer] = useState(\"answer_1\");\n  const [userIsAuth, setUserIsAuth] = useState(false);\n  const [userInfo, setUserInfo] = useState(\"\");\n  const altImage = \"https://static.thenounproject.com/png/396915-200.png\";\n\n  const handleChange = e => {\n    setCorrectAnswer(e.target.value);\n  };\n\n  const validate = () => {\n    let isValid = true;\n    const le = {\n      title: \"\",\n      description: \"\",\n      url: \"\"\n    };\n\n    if (title.length <= 0) {\n      le[\"title\"] = \" can't be empty\";\n      isValid = false;\n    }\n\n    if (description.length < 6) {\n      le[\"description\"] = \" should be at least 6 in length\";\n      isValid = false;\n    }\n\n    if (url.length < 5) {\n      le[\"url\"] = \" should be at least 5 in length\";\n      isValid = false;\n    }\n\n    setErrors(le);\n    return isValid;\n  };\n\n  useEffect(() => {\n    const user = JSON.parse(localStorage.getItem(\"user\"));\n    const isAuth = true;\n\n    if (user == null) {\n      setUserIsAuth(false);\n      navigate(\"/user/login\");\n    }\n\n    const fetchData = async () => {\n      console.log(\"Here \");\n    };\n\n    fetchData();\n  }, []);\n\n  const handleOnSubmit = async e => {\n    // Send to server\n    e.preventDefault();\n    console.log(\"Value \", correctAnswer); // If error then we don't dispatch\n    //   if (!validate(title, description, url)) return;\n\n    let correct1 = false;\n    let correct2 = false;\n    let correct3 = false;\n    let correct4 = false;\n\n    if (correctAnswer == \"answer_1\") {\n      correct1 = true;\n    } else if (correctAnswer == \"answer_2\") {\n      correct2 = true;\n    } else if (correctAnswer == \"answer_3\") {\n      correct3 = true;\n    } else {\n      correct4 = true;\n    }\n\n    const user = JSON.parse(localStorage.getItem(\"user\"));\n    console.log(\"The user \", user, \"id \", user.id);\n    console.log(\"The user right here on submit \", user);\n    let requestOptions = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      credentials: \"include\",\n      body: JSON.stringify({\n        title: title,\n        titleImage: url,\n        owner: user\n      })\n    };\n    let getRequest = {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    let userRes = await fetch(\"http://localhost:4567/user/info\", getRequest);\n    console.log(\"user res \", userRes);\n  };\n\n  const createNFT = () => {\n    console.log(\"Create nft \");\n    console.log(\"Title \", title);\n    console.log(\"IPSF  \", url);\n    console.log(\"Description \", description);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Create NFT!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      action: \"\",\n      method: \"get\",\n      onSubmit: e => handleOnSubmit(e),\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Title of NFT\", errors.title, /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: title,\n          title: \"title\",\n          onChange: e => settitle(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"IPSF URL\", errors.url, /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: url,\n          title: \"url\",\n          onChange: e => setUrl(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Description\", errors.description, /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: description,\n          title: \"description\",\n          onChange: e => setdescription(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        onClick: e => createNFT(e.target.value),\n        children: \"Create\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"left-side\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"profile-pic\",\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"img\", {\n            src: url,\n            id: \"profilepic\",\n            onError: altImage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 13\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"profile-name\",\n          children: [title, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"profile-username\",\n          children: [\" \", description, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NodeSystem, \"MZz0S2UMyQyB2/jPfuSwhzU5Gdg=\", false, function () {\n  return [useDispatch];\n});\n\n_c = NodeSystem;\nexport default NodeSystem;\n\nvar _c;\n\n$RefreshReg$(_c, \"NodeSystem\");","map":{"version":3,"sources":["/Users/fridrikorngunnarsson/Documents/GitHub/save_game/save_game/lightweight_blockchain-main/blockchain_webinterface/annall_ui/src/components/NodeSystem/index.js"],"names":["React","useState","useEffect","useDispatch","Link","useNavigate","NodeSystem","dispatch","navigate","title","settitle","description","setdescription","url","setUrl","answer1","setAnswer1","answer2","setAnswer2","answer3","setAnswer3","answer4","setAnswer4","answer1Correct","setAnswer1Correct","answer2Correct","setAnswer2Correct","answer3Correct","setAnswer3Correct","answer4Correct","setAnswer4Correct","errors","setErrors","correctAnswer","setCorrectAnswer","userIsAuth","setUserIsAuth","userInfo","setUserInfo","altImage","handleChange","e","target","value","validate","isValid","le","length","user","JSON","parse","localStorage","getItem","isAuth","fetchData","console","log","handleOnSubmit","preventDefault","correct1","correct2","correct3","correct4","id","requestOptions","method","headers","credentials","body","stringify","titleImage","owner","getRequest","userRes","fetch","createNFT"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Link, useNavigate } from \"react-router-dom\";\n\nconst NodeSystem = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate;\n  const [title, settitle] = useState(\"\");\n  const [description, setdescription] = useState(\"\");\n  const [url, setUrl] = useState(\"\");\n  const [answer1, setAnswer1] = useState(\"\");\n  const [answer2, setAnswer2] = useState(\"\");\n  const [answer3, setAnswer3] = useState(\"\");\n  const [answer4, setAnswer4] = useState(\"\");\n  const [answer1Correct, setAnswer1Correct] = useState(false);\n  const [answer2Correct, setAnswer2Correct] = useState(false);\n  const [answer3Correct, setAnswer3Correct] = useState(false);\n  const [answer4Correct, setAnswer4Correct] = useState(false);\n  const [errors, setErrors] = useState({ title: \"\", description: \"\", url: \"\" });\n  const [correctAnswer, setCorrectAnswer] = useState(\"answer_1\");\n  const [userIsAuth, setUserIsAuth] = useState(false);\n  const [userInfo, setUserInfo] = useState(\"\");\n  const altImage = \"https://static.thenounproject.com/png/396915-200.png\";\n\n  const handleChange = (e) => {\n    setCorrectAnswer(e.target.value);\n  };\n  const validate = () => {\n    let isValid = true;\n    const le = { title: \"\", description: \"\", url: \"\" };\n    if (title.length <= 0) {\n      le[\"title\"] = \" can't be empty\";\n      isValid = false;\n    }\n\n    if (description.length < 6) {\n      le[\"description\"] = \" should be at least 6 in length\";\n      isValid = false;\n    }\n    if (url.length < 5) {\n      le[\"url\"] = \" should be at least 5 in length\";\n      isValid = false;\n    }\n\n    setErrors(le);\n    return isValid;\n  };\n\n  useEffect(() => {\n    const user = JSON.parse(localStorage.getItem(\"user\"));\n    const isAuth = true;\n    if (user == null) {\n      setUserIsAuth(false);\n      navigate(\"/user/login\");\n    }\n    const fetchData = async () => {\n      console.log(\"Here \");\n    };\n    fetchData();\n  }, []);\n\n  const handleOnSubmit = async (e) => {\n    // Send to server\n    e.preventDefault();\n    console.log(\"Value \", correctAnswer);\n    // If error then we don't dispatch\n    //   if (!validate(title, description, url)) return;\n    let correct1 = false;\n    let correct2 = false;\n    let correct3 = false;\n    let correct4 = false;\n\n    if (correctAnswer == \"answer_1\") {\n      correct1 = true;\n    } else if (correctAnswer == \"answer_2\") {\n      correct2 = true;\n    } else if (correctAnswer == \"answer_3\") {\n      correct3 = true;\n    } else {\n      correct4 = true;\n    }\n\n    const user = JSON.parse(localStorage.getItem(\"user\"));\n    console.log(\"The user \", user, \"id \", user.id);\n    console.log(\"The user right here on submit \", user);\n\n    let requestOptions = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      credentials: \"include\",\n      body: JSON.stringify({\n        title: title,\n        titleImage: url,\n        owner: user,\n      }),\n    };\n    let getRequest = {\n      method: \"GET\",\n      headers: { \"Content-Type\": \"application/json\" },\n    };\n    let userRes = await fetch(\"http://localhost:4567/user/info\", getRequest);\n    console.log(\"user res \", userRes);\n  };\n\n  const createNFT = () => {\n    console.log(\"Create nft \");\n    console.log(\"Title \", title);\n    console.log(\"IPSF  \", url);\n    console.log(\"Description \", description);\n  };\n\n  return (\n    <div>\n      <h1>Create NFT!</h1>\n      <form action=\"\" method=\"get\" onSubmit={(e) => handleOnSubmit(e)}>\n        <label>\n          Title of NFT\n          {errors.title}\n          <input\n            type=\"text\"\n            value={title}\n            title=\"title\"\n            onChange={(e) => settitle(e.target.value)}\n          />\n        </label>\n\n        <label>\n          IPSF URL\n          {errors.url}\n          <input\n            type=\"text\"\n            value={url}\n            title=\"url\"\n            onChange={(e) => setUrl(e.target.value)}\n          />\n        </label>\n        <label>\n          Description\n          {errors.description}\n          <input\n            type=\"text\"\n            value={description}\n            title=\"description\"\n            onChange={(e) => setdescription(e.target.value)}\n          />\n        </label>\n\n        <button type=\"submit\" onClick={(e) => createNFT(e.target.value)}>\n          Create\n        </button>\n      </form>\n      <div>\n        <div id=\"left-side\">\n          <div id=\"profile-pic\">\n            {\" \"}\n            <img src={url} id=\"profilepic\" onError={altImage} />{\" \"}\n          </div>\n          <div id=\"profile-name\">{title} </div>\n          <div id=\"profile-username\"> {description} </div>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default NodeSystem;\n"]},"metadata":{},"sourceType":"module"}