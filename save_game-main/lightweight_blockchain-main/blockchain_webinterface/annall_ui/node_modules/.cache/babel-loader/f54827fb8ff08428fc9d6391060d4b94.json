{"ast":null,"code":"const getBundle = (bundles, bossId) => {\n  let ourBoss = {};\n  let ret = bundles.filter(el => el.id.toString() === bossId);\n  let first = ret[0];\n  return first;\n};\n\nconst bundleReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    bundles: []\n  };\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"SET_BUNDLES\":\n      return {\n        bundles: action.payload\n      };\n\n    case \"DELETE_BUNDLES\":\n      return {\n        bundles: state.bundles.filter(el => el.id.toString() !== action.payload.id)\n      };\n\n    case \"ADD_BUNDLES\":\n      return {\n        bundles: [...state.bundles, action.payload]\n      };\n\n    case \"EDIT_BUNDLES\":\n      const filteredbundles = state.bundles.filter(el => el.id.toString() !== action.payload.id);\n      return {\n        bundles: [...filteredbundles, action.payload]\n      };\n\n    default:\n      return {\n        bundles: state.bundles\n      };\n  }\n};\n\nexport default bundleReducer;","map":{"version":3,"sources":["/Users/fridrikorngunnarsson/Documents/GitHub/save_game/save_game/lightweight_blockchain-main/blockchain_webinterface/annall_ui/src/redux/reducers/bundleReducer.js"],"names":["getBundle","bundles","bossId","ourBoss","ret","filter","el","id","toString","first","bundleReducer","state","action","type","payload","filteredbundles"],"mappings":"AAAA,MAAMA,SAAS,GAAG,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACrC,MAAIC,OAAO,GAAG,EAAd;AACA,MAAIC,GAAG,GAAGH,OAAO,CAACI,MAAR,CAAgBC,EAAD,IAAQA,EAAE,CAACC,EAAH,CAAMC,QAAN,OAAqBN,MAA5C,CAAV;AACA,MAAIO,KAAK,GAAGL,GAAG,CAAC,CAAD,CAAf;AACA,SAAOK,KAAP;AACD,CALD;;AAOA,MAAMC,aAAa,GAAG,YAAqC;AAAA,MAApCC,KAAoC,uEAA5B;AAAEV,IAAAA,OAAO,EAAE;AAAX,GAA4B;AAAA,MAAXW,MAAW;;AACzD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,aAAL;AACE,aAAO;AACLZ,QAAAA,OAAO,EAAEW,MAAM,CAACE;AADX,OAAP;;AAGF,SAAK,gBAAL;AACE,aAAO;AACLb,QAAAA,OAAO,EAAEU,KAAK,CAACV,OAAN,CAAcI,MAAd,CACNC,EAAD,IAAQA,EAAE,CAACC,EAAH,CAAMC,QAAN,OAAqBI,MAAM,CAACE,OAAP,CAAeP,EADrC;AADJ,OAAP;;AAKF,SAAK,aAAL;AACE,aAAO;AACLN,QAAAA,OAAO,EAAE,CAAC,GAAGU,KAAK,CAACV,OAAV,EAAmBW,MAAM,CAACE,OAA1B;AADJ,OAAP;;AAIF,SAAK,cAAL;AACE,YAAMC,eAAe,GAAGJ,KAAK,CAACV,OAAN,CAAcI,MAAd,CACrBC,EAAD,IAAQA,EAAE,CAACC,EAAH,CAAMC,QAAN,OAAqBI,MAAM,CAACE,OAAP,CAAeP,EADtB,CAAxB;AAGA,aAAO;AACLN,QAAAA,OAAO,EAAE,CAAC,GAAGc,eAAJ,EAAqBH,MAAM,CAACE,OAA5B;AADJ,OAAP;;AAGF;AACE,aAAO;AACLb,QAAAA,OAAO,EAAEU,KAAK,CAACV;AADV,OAAP;AAxBJ;AA4BD,CA7BD;;AA+BA,eAAeS,aAAf","sourcesContent":["const getBundle = (bundles, bossId) => {\n  let ourBoss = {};\n  let ret = bundles.filter((el) => el.id.toString() === bossId);\n  let first = ret[0];\n  return first;\n};\n\nconst bundleReducer = (state = { bundles: [] }, action) => {\n  switch (action.type) {\n    case \"SET_BUNDLES\":\n      return {\n        bundles: action.payload,\n      };\n    case \"DELETE_BUNDLES\":\n      return {\n        bundles: state.bundles.filter(\n          (el) => el.id.toString() !== action.payload.id\n        ),\n      };\n    case \"ADD_BUNDLES\":\n      return {\n        bundles: [...state.bundles, action.payload],\n      };\n\n    case \"EDIT_BUNDLES\":\n      const filteredbundles = state.bundles.filter(\n        (el) => el.id.toString() !== action.payload.id\n      );\n      return {\n        bundles: [...filteredbundles, action.payload],\n      };\n    default:\n      return {\n        bundles: state.bundles,\n      };\n  }\n};\n\nexport default bundleReducer;\n"]},"metadata":{},"sourceType":"module"}