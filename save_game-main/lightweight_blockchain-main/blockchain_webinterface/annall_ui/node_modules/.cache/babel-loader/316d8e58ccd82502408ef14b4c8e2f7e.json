{"ast":null,"code":"var _jsxFileName = \"/Users/heidifjeldelima/Documents/GitHub/save_game/lightweight_blockchain-main/blockchain_webinterface/annall_ui/src/components/User/userLogin.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useNavigate, Redirect } from \"react-router-dom\";\nimport userService from \"../../services/userService\";\nimport { USER_LOGIN_ACTION } from \"../../redux/actions/userActions\"; // import loggedIn from '../NavBar/index'\n\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UserLogin = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const [loading, setLoading] = useState(false);\n  const navigate = useNavigate();\n  const registerItems = JSON.parse(localStorage.getItem(\"loginForm\"));\n\n  if (registerItems == null) {\n    const loginInfo = {\n      name: \"\",\n      userPassword: \"\"\n    };\n    localStorage.setItem(\"loginForm\", JSON.stringify(loginInfo));\n  }\n\n  console.log(\"The register form \", registerItems);\n  const [username, setUserName] = useState(registerItems.username);\n  const [userPassword, setPassword] = useState(registerItems.userPassword);\n  const [errors, setErrors] = useState({\n    name: \"\",\n    displayName: \"\",\n    userPassword: \"\"\n  });\n  const [success, setSuccess] = useState(false);\n\n  const validate = () => {\n    let isValid = true;\n    const le = {\n      username: \"\",\n      displayName: \"\",\n      userPassword: \"\"\n    }; // length of 3\n\n    if (username.length < 3) {\n      le[\"username\"] = \" can't be empty\";\n      isValid = false;\n    } // userPassword must be at least 8\n\n\n    if (userPassword.length < 8) {\n      le[\"userPassword\"] = \" should be at least 8 in length\";\n      isValid = false;\n    }\n\n    setErrors(le);\n    return isValid;\n  };\n\n  useEffect(() => {\n    const user = JSON.parse(localStorage.getItem(\"user\"));\n    const isAuth = true;\n\n    if (user != null) {\n      navigate(\"/dashboard\");\n    }\n\n    const registerForm = {\n      username,\n      userPassword\n    };\n    if (!username || !userPassword) // storing new cart\n      localStorage.removeItem(\"loginForm\");\n    localStorage.setItem(\"loginForm\", JSON.stringify(registerForm));\n  });\n\n  const handleOnSubmit = async e => {\n    // Send to server\n    e.preventDefault();\n    if (!validate(username, userPassword)) return;\n    const data = localStorage.getItem(\"loginForm\"); // login the user, this returns a json token of the user\n\n    const user = await dispatch(userService().login(username, userPassword)); // Set the user to the local storage\n\n    localStorage.setItem(\"user\", JSON.stringify(user));\n\n    if (user) {\n      dispatch(USER_LOGIN_ACTION(user));\n      navigate(\"/dashboard\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [success ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\" You are logged in now as \", username, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Login!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        action: \"\",\n        method: \"get\",\n        onSubmit: e => handleOnSubmit(e),\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"username\", errors.name, /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: username,\n            name: \"username\",\n            onChange: e => setUserName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"userPassword\", errors.userPassword, /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: userPassword,\n            name: \"userPassword\",\n            onChange: e => setPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/user/register\",\n      className: \"nav-link\",\n      children: \"On second thought let me register instead\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UserLogin, \"rN39rdw/fRw51Y6kdSlUpWWvvME=\", false, function () {\n  return [useDispatch, useNavigate];\n});\n\n_c = UserLogin;\nexport default UserLogin;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserLogin\");","map":{"version":3,"sources":["/Users/heidifjeldelima/Documents/GitHub/save_game/lightweight_blockchain-main/blockchain_webinterface/annall_ui/src/components/User/userLogin.jsx"],"names":["React","useState","useEffect","useDispatch","useNavigate","Redirect","userService","USER_LOGIN_ACTION","Link","UserLogin","dispatch","loading","setLoading","navigate","registerItems","JSON","parse","localStorage","getItem","loginInfo","name","userPassword","setItem","stringify","console","log","username","setUserName","setPassword","errors","setErrors","displayName","success","setSuccess","validate","isValid","le","length","user","isAuth","registerForm","removeItem","handleOnSubmit","e","preventDefault","data","login","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useNavigate, Redirect } from \"react-router-dom\";\nimport userService from \"../../services/userService\";\nimport { USER_LOGIN_ACTION } from \"../../redux/actions/userActions\";\n// import loggedIn from '../NavBar/index'\nimport { Link } from \"react-router-dom\";\nconst UserLogin = () => {\n  const dispatch = useDispatch();\n  const [loading, setLoading] = useState(false);\n  const navigate = useNavigate();\n\n  const registerItems = JSON.parse(localStorage.getItem(\"loginForm\"));\n  if (registerItems == null) {\n    const loginInfo = {\n      name: \"\",\n      userPassword: \"\",\n    };\n    localStorage.setItem(\"loginForm\", JSON.stringify(loginInfo));\n  }\n  console.log(\"The register form \", registerItems);\n  const [username, setUserName] = useState(registerItems.username);\n  const [userPassword, setPassword] = useState(registerItems.userPassword);\n  const [errors, setErrors] = useState({\n    name: \"\",\n    displayName: \"\",\n    userPassword: \"\",\n  });\n  const [success, setSuccess] = useState(false);\n\n  const validate = () => {\n    let isValid = true;\n    const le = { username: \"\", displayName: \"\", userPassword: \"\" };\n    // length of 3\n    if (username.length < 3) {\n      le[\"username\"] = \" can't be empty\";\n      isValid = false;\n    }\n    // userPassword must be at least 8\n    if (userPassword.length < 8) {\n      le[\"userPassword\"] = \" should be at least 8 in length\";\n      isValid = false;\n    }\n    setErrors(le);\n    return isValid;\n  };\n  useEffect(() => {\n    const user = JSON.parse(localStorage.getItem(\"user\"));\n    const isAuth = true;\n    if (user != null) {\n      navigate(\"/dashboard\");\n    }\n    const registerForm = {\n      username,\n      userPassword,\n    };\n    if (!username || !userPassword)\n      // storing new cart\n      localStorage.removeItem(\"loginForm\");\n    localStorage.setItem(\"loginForm\", JSON.stringify(registerForm));\n  });\n\n  const handleOnSubmit = async (e) => {\n    // Send to server\n    e.preventDefault();\n    if (!validate(username, userPassword)) return;\n\n    const data = localStorage.getItem(\"loginForm\");\n    // login the user, this returns a json token of the user\n    const user = await dispatch(userService().login(username, userPassword));\n    // Set the user to the local storage\n    localStorage.setItem(\"user\", JSON.stringify(user));\n    if (user) {\n      dispatch(USER_LOGIN_ACTION(user));\n\n      navigate(\"/dashboard\");\n    }\n  };\n\n  return (\n    <div>\n      {success ? (\n        <div> You are logged in now as {username} </div>\n      ) : (\n        <div>\n          <h1>Login!</h1>\n          <form action=\"\" method=\"get\" onSubmit={(e) => handleOnSubmit(e)}>\n            <label>\n              username\n              {errors.name}\n              <input\n                type=\"text\"\n                value={username}\n                name=\"username\"\n                onChange={(e) => setUserName(e.target.value)}\n              />\n            </label>\n            <label>\n              userPassword\n              {errors.userPassword}\n              <input\n                type=\"text\"\n                value={userPassword}\n                name=\"userPassword\"\n                onChange={(e) => setPassword(e.target.value)}\n              />\n            </label>\n            <button type=\"submit\">Login</button>\n          </form>\n        </div>\n      )}\n      <Link to=\"/user/register\" className=\"nav-link\">\n        On second thought let me register instead\n      </Link>\n    </div>\n  );\n};\n\nexport default UserLogin;\n"]},"metadata":{},"sourceType":"module"}