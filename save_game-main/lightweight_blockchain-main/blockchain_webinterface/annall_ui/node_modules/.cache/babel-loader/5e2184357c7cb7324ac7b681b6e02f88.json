{"ast":null,"code":"var _jsxFileName = \"/Users/heidifjeldelima/Documents/GitHub/save_game/lightweight_blockchain-main/blockchain_webinterface/annall_ui/src/components/BlockList/index.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Table from \"react-bootstrap/Table\";\nimport BlockListItem from \"../BlockListItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BlockList = () => {\n  _s();\n\n  const [blocks, setBlocks] = useState([]);\n  const [url, setUrl] = useState(\"api/blocks?key=1\");\n\n  const fetchData = async () => {\n    try {\n      const res = await axios.get(url);\n      console.log(res.data);\n      setWriters(res.data);\n    } catch (e) {\n      console.log(\"error\");\n    }\n  };\n\n  useEffect(async () => {\n    await fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      striped: true,\n      className: \"room-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Previous Hash\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Writer Signature\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Writer ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Coordinator ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Winner Number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Payload\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: blocks.map(b => /*#__PURE__*/_jsxDEV(BlockListItem, {\n          previous_hash: b.previous_hash,\n          writer_signature: b.writer_signature,\n          writer_id: b.writer_ID,\n          coordinator_id: b.coordinator_ID,\n          winner_number: b.winner_number,\n          payload: b.payload\n        }, b.hash, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n\n_s(BlockList, \"/BrSXUpEduaSpa83mF9i2fFb/zo=\");\n\n_c = BlockList;\nexport default BlockList;\n\nvar _c;\n\n$RefreshReg$(_c, \"BlockList\");","map":{"version":3,"sources":["/Users/heidifjeldelima/Documents/GitHub/save_game/lightweight_blockchain-main/blockchain_webinterface/annall_ui/src/components/BlockList/index.js"],"names":["React","Table","BlockListItem","BlockList","blocks","setBlocks","useState","url","setUrl","fetchData","res","axios","get","console","log","data","setWriters","e","useEffect","map","b","previous_hash","writer_signature","writer_ID","coordinator_ID","winner_number","payload","hash"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAOC,aAAP,MAA0B,kBAA1B;;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACtB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBC,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBF,QAAQ,CAAC,kBAAD,CAA9B;;AAEA,QAAMG,SAAS,GAAG,YAAY;AAC5B,QAAI;AACF,YAAMC,GAAG,GAAG,MAAMC,KAAK,CAACC,GAAN,CAAUL,GAAV,CAAlB;AACAM,MAAAA,OAAO,CAACC,GAAR,CAAYJ,GAAG,CAACK,IAAhB;AACAC,MAAAA,UAAU,CAACN,GAAG,CAACK,IAAL,CAAV;AACD,KAJD,CAIE,OAAOE,CAAP,EAAU;AACVJ,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACD;AACF,GARD;;AAUAI,EAAAA,SAAS,CAAC,YAAY;AACpB,UAAMT,SAAS,EAAf;AACD,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACE;AAAA,2BACE,QAAC,KAAD;AAAO,MAAA,OAAO,MAAd;AAAe,MAAA,SAAS,EAAC,YAAzB;AAAA,8BACE;AAAA,+BACE;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBANF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAWE;AAAA,kBACGL,MAAM,CAACe,GAAP,CAAYC,CAAD,iBACV,QAAC,aAAD;AAEE,UAAA,aAAa,EAAEA,CAAC,CAACC,aAFnB;AAGE,UAAA,gBAAgB,EAAED,CAAC,CAACE,gBAHtB;AAIE,UAAA,SAAS,EAAEF,CAAC,CAACG,SAJf;AAKE,UAAA,cAAc,EAAEH,CAAC,CAACI,cALpB;AAME,UAAA,aAAa,EAAEJ,CAAC,CAACK,aANnB;AAOE,UAAA,OAAO,EAAEL,CAAC,CAACM;AAPb,WACON,CAAC,CAACO,IADT;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA,cAXF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA6BD,CA/CD;;GAAMxB,S;;KAAAA,S;AAiDN,eAAeA,SAAf","sourcesContent":["import React from \"react\";\nimport Table from \"react-bootstrap/Table\";\nimport BlockListItem from \"../BlockListItem\";\n\nconst BlockList = () => {\n  const [blocks, setBlocks] = useState([]);\n  const [url, setUrl] = useState(\"api/blocks?key=1\");\n\n  const fetchData = async () => {\n    try {\n      const res = await axios.get(url);\n      console.log(res.data);\n      setWriters(res.data);\n    } catch (e) {\n      console.log(\"error\");\n    }\n  };\n\n  useEffect(async () => {\n    await fetchData();\n  }, []);\n\n  return (\n    <div>\n      <Table striped className=\"room-table\">\n        <thead>\n          <tr>\n            <th>Previous Hash</th>\n            <th>Writer Signature</th>\n            <th>Writer ID</th>\n            <th>Coordinator ID</th>\n            <th>Winner Number</th>\n            <th>Payload</th>\n          </tr>\n        </thead>\n        <tbody>\n          {blocks.map((b) => (\n            <BlockListItem\n              key={b.hash}\n              previous_hash={b.previous_hash}\n              writer_signature={b.writer_signature}\n              writer_id={b.writer_ID}\n              coordinator_id={b.coordinator_ID}\n              winner_number={b.winner_number}\n              payload={b.payload}\n            />\n          ))}\n        </tbody>\n      </Table>\n    </div>\n  );\n};\n\nexport default BlockList;\n"]},"metadata":{},"sourceType":"module"}